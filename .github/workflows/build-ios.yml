name: Build MAUI iOS (Unsigned IPA)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - workingbuild

jobs:
  build-ios:
    runs-on: macos-latest
    env:
      DOTNET_ROOT: /Users/runner/.dotnet

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Decode and save the P12
      - name: Decode .p12 from secret
        run: |
          echo "Base64 from secret:"
          echo "${{ secrets.IOS_PROVISION_BASE64 }}" | base64 --decode > ios_profile.mobileprovision
          security cms -D -i ios_profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          printf "%s" "${{ secrets.IOS_KEY }}" | tr -d '\r\n' | base64 --decode > ios_distribution.key
          printf "%s" "${{ secrets.IOS_PEM }}" > ios_distribution.pem
          openssl pkcs12 -export -inkey ios_distribution.key -in ios_distribution.pem -out ios_distribution.p12 -name "iPhone Distribution: Marc Armstrong (XVHZQ55ZBQ)" -passout pass:${{ secrets.IOS_P12_PASSWORD }}
      - name: Show decoded provisioning profile
        run: |
          security cms -D -i ios_profile.mobileprovision

      # 2. Setup .NET 9 SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      # 3. Install necessary MAUI workloads
      - name: Install MAUI workloads
        run: |
          dotnet workload install maui-ios
          dotnet workload restore EdinPopfest/EdinPopfest.iOS/EdinPopfest.iOS.csproj

      # 4. Restore NuGet packages for iOS project (only iOS target)
      - name: Restore NuGet packages
        run: |
          dotnet restore EdinPopfest/EdinPopfest.iOS/EdinPopfest.iOS.csproj

      # Decode and save certificate & provisioning profile
      - name: Set up signing
        run: |
          echo "Set up signing:"
          echo "${{ secrets.IOS_PROVISION_BASE64 }}" | base64 --decode > ios_profile.mobileprovision

      - name: Import certificate into keychain
        run: |
          #security create-keychain -p "" build.keychain
          #security import ios_distribution.p12 -k ~/Library/Keychains/build.keychain -P "${{ secrets.IOS_P12_PASSWORD }}" -T /usr/bin/codesign
          #security list-keychains -s ~/Library/Keychains/build.keychain
          #security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          #security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

          openssl pkcs12 -in ios_distribution.p12 -nokeys -passin pass:"$IOS_P12_PASSWORD"

          # Full path to keychain
          KEYCHAIN=/Users/runner/Library/Keychains/build.keychain-db

          # Create keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"

          # Import P12
          security import ios_distribution.p12 \
            -k "$KEYCHAIN" \
            -P "$IOS_P12_PASSWORD" \
            -T /usr/bin/codesign

          # Unlock keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"

          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"

          security list-keychains -s "$KEYCHAIN" /Users/runner/Library/Keychains/login.keychain-db $(security list-keychains | tr -d '"')

          # Set settings
          security set-keychain-settings -t 3600 -l "$KEYCHAIN"

          # Add to search path
          security list-keychains -s "$KEYCHAIN" $(security list-keychains | tr -d '"')

          # Verify info
          security show-keychain-info "$KEYCHAIN"

          security find-identity -v -p codesigning /Users/runner/Library/Keychains/build.keychain-db
          security find-identity -v -p codesigning
        env:
          KEYCHAIN_PASSWORD: "buildpass123"
          IOS_P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}

      # 5. Build iOS project (signed IPA)
      - name: Build iOS project
        run: |
          dotnet publish EdinPopfest/EdinPopfest.iOS/EdinPopfest.iOS.csproj \
            -f net9.0-ios -c Debug -v:diag \
            /p:BuildIpa=true \
            /p:MtouchLink=None \
            /p:CodesignKey="iPhone Distribution: Marc Armstrong (XVHZQ55ZBQ)" \
            /p:CodesignKeyPassword="$IOS_P12_PASSWORD" \
            /p:ProvisioningProfile="b3c33c35-1cbf-42d3-a403-bc1432dd1fee"
        env:
          IOS_P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}


      # 6. Upload IPA artifact
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: EdinPopfest-ipa
          path: EdinPopfest/EdinPopfest.iOS/bin/Debug/net9.0-ios/ios-arm64/publish/*.ipa
